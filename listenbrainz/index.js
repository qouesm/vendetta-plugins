(function(c,a,p,O,l,E,S,h,y,_,m){"use strict";const g={DEFAULT_APP_NAME:"Discord RPC",DEFAULT_TIME_INTERVAL:15,APPLICATION_ID:"1090155131007406132"};m.findByProps("SET_ACTIVITY");const B=m.findByProps("getAssetIds"),V=m.findByStoreName("SelfPresenceStore"),z=m.findByStoreName("UserStore");function f(){return R(null)}function R(e){r.pluginStopped&&(u(!0),e=null),r.lastActivity=e,a.FluxDispatcher.dispatch({type:"LOCAL_ACTIVITY_UPDATE",activity:e,pid:2312,socketId:"ListenBrainz@Vendetta"})}async function M(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:g.APPLICATION_ID;return e?await B.fetchAssetIds(t,e):[]}let P;const N={};function o(e,t){N[e]=t,P?.()}function x(){return[,P]=h.useReducer(function(e){return~e},0),JSON.stringify(N,null,4)}async function G(){const e=await fetch(`https://api.listenbrainz.org/1/user/${s.username}/playing-now`);if(!e.ok)throw new Error(`Failed to fetch the latest scrobble: ${e.statusText}`);const t=(await e.json()).payload?.listens?.[0];if(o("lastAPIResponse",t),!t?.playing_now)return null;const n=t.track_metadata,F=n.release_name||"Unknown",U=n.artist_name||"Unknown",T=await fetch(`https://musicbrainz.org/ws/2/release/?query=release:
        ${encodeURIComponent(F)}%20AND%20artist:${encodeURIComponent(U)}&fmt=json`);if(!T.ok)throw`${T.status} ${T.statusText}`;let W=((await T.json()).releases||[])[0]["release-group"].id;const b=await fetch(`https://coverartarchive.org/release-group/${W}`);if(!b.ok)throw`${b.status} ${b.statusText}`;const $=await b.json(),X=$.release,Z=$.images;let A="";for(const ee of Z)if(A=ee.thumbnails.large||"",!!A)break;return{name:n.track_name||"Unknown",artist:U,album:F,albumArt:A,url:X,date:"now",nowPlaying:!0,loved:!1}}var L;(function(e){e[e.PLAYING=0]="PLAYING",e[e.STREAMING=1]="STREAMING",e[e.LISTENING=2]="LISTENING",e[e.COMPETING=5]="COMPETING"})(L||(L={}));const i=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return s.verboseLogging&&console.log(...t)};async function D(){if(r.pluginStopped){i("--> Plugin is unloaded, aborting update()..."),u();return}if(i("--> Fetching last track..."),!s.username)throw S.showToast("ListenBrainz username is not set!",l.getAssetIDByName("Small")),u(),new Error("Username is not set");if(s.ignoreSpotify)if(V.findActivity(function(n){return n.sync_id})){i("--> Spotify is currently playing, aborting..."),o("isSpotifyIgnored",!0),f();return}else o("isSpotifyIgnored",!1);else o("isSpotifyIgnored",void 0);const e=await G().catch(async function(n){throw i("--> An error occurred while fetching the last track, aborting..."),f(),n});if(o("lastTrack",e),!e.nowPlaying){i("--> Last track is not currently playing, aborting..."),f();return}if(i("--> Track fetched!"),r.lastTrackUrl===e.url){i("--> Last track is the same as the previous one, aborting...");return}const t={name:g.DEFAULT_APP_NAME,flags:0,type:s.listeningTo?2:0,details:e.name,state:`by ${e.artist}`,application_id:g.APPLICATION_ID};if(r.lastTrackUrl=e.url,t.name.includes("{{"))for(const n in e)t.name=t.name.replace(`{{${n}}}`,e[n]);if(s.showTimestamp&&(t.timestamps={start:Date.now()/1e3|0}),e.album){const n=await M([e.albumArt]);t.assets={large_image:n[0],large_text:`on ${e.album}`}}i("--> Setting activity..."),o("lastActivity",t),i(t);try{R(t)}catch(n){throw i("--> An error occurred while setting the activity"),f(),n}i("--> Successfully set activity!")}function u(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;r.lastActivity=null,r.lastTrackUrl=null,r.updateInterval&&clearInterval(r.updateInterval),!e&&f()}async function w(){if(r.pluginStopped)throw new Error("Plugin is already stopped!");u();let e=0;await D().catch(function(t){console.error(t),e++}),r.updateInterval=setInterval(function(){return D().then(function(){e=0}).catch(function(t){console.error(t),++e>3&&(console.error("Failed to fetch/set activity 3 times, aborting..."),u())})},(Number(s.timeInterval)||g.DEFAULT_TIME_INTERVAL)*1e3)}const r={};_.plugin.storage.ignoreSpotify??=!0;const s={..._.plugin.storage};var j={settings:h.lazy(function(){return Promise.resolve().then(function(){return K})}),onLoad(){if(r.pluginStopped=!1,z.getCurrentUser())w().catch(console.error);else{const e=function(){w().catch(console.error),a.FluxDispatcher.unsubscribe(e)};a.FluxDispatcher.subscribe("CONNECTION_OPEN",e)}},onUnload(){r.pluginStopped=!0,u()}};const{FormRow:k,FormInput:C,FormDivider:d,FormSwitchRow:v,FormText:q,FormIcon:I}=E.Forms;function Y(){async function e(){for(const t in p.storage)p.storage[t]!=null&&(s[t]=p.storage[t]);await w(),S.showToast("Settings updated!",l.getAssetIDByName("Check"))}return a.React.createElement(y.TouchableOpacity,{onPress:e},a.React.createElement(q,{style:{marginRight:12}},"UPDATE"))}var H=a.React.memo(function(){const e=O.useProxy(p.storage),t=a.NavigationNative.useNavigation();return h.useEffect(function(){t.setOptions({title:"ListenBrainz Configuration",headerRight:Y})},[]),a.React.createElement(y.ScrollView,null,a.React.createElement(C,{required:!0,value:e.username||void 0,onChangeText:function(n){return e.username=n.trim()},title:"ListenBrainz username",helpText:!e.username&&a.React.createElement(y.Text,{style:{color:"#FF0000"}},"This field is required!"),placeholder:"wumpus123",returnKeyType:"done"}),a.React.createElement(d,null),a.React.createElement(C,{value:e.timeInterval,onChangeText:function(n){return e.timeInterval=n},title:"Update interval (in seconds)",placeholder:g.DEFAULT_TIME_INTERVAL.toString(),keyboardType:"numeric",returnKeyType:"done"}),a.React.createElement(d,null),a.React.createElement(v,{label:"Show time elapsed",subLabel:"Show the time elapsed since the song started playing",leading:a.React.createElement(I,{source:l.getAssetIDByName("clock")}),value:e.showTimestamp,onValueChange:function(n){return e.showTimestamp=n}}),a.React.createElement(d,null),a.React.createElement(v,{label:"Set status as listening",subLabel:'Set your status as "Listening to" instead of "Playing"',leading:a.React.createElement(I,{source:l.getAssetIDByName("ic_headset_neutral")}),value:e.listeningTo,onValueChange:function(n){return e.listeningTo=n}}),a.React.createElement(d,null),a.React.createElement(v,{label:"Hide when Spotify is running",subLabel:"Hide the status when a Spotify activity is detected",leading:a.React.createElement(I,{source:l.getAssetIDByName("img_account_sync_spotify_light_and_dark")}),value:e.ignoreSpotify,onValueChange:function(n){return e.ignoreSpotify=n}}),a.React.createElement(d,null),a.React.createElement(k,{label:"Debug",subLabel:"View debug information",leading:a.React.createElement(I,{source:l.getAssetIDByName("debug")}),trailing:k.Arrow,onPress:function(){t.push("VendettaCustomPage",{title:"Debug",render:h.lazy(function(){return Promise.resolve().then(function(){return Q})})})}}))}),K=Object.freeze({__proto__:null,default:H});function J(){const e=x();return React.createElement(y.ScrollView,null,React.createElement(E.Codeblock,{selectable:!0,style:{margin:12}},e))}var Q=Object.freeze({__proto__:null,default:J});return c.currentSettings=s,c.default=j,c.pluginState=r,Object.defineProperty(c,"__esModule",{value:!0}),c})({},vendetta.metro.common,vendetta.plugin,vendetta.storage,vendetta.ui.assets,vendetta.ui.components,vendetta.ui.toasts,window.React,reactNative,vendetta,vendetta.metro);
